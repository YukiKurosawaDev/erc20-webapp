{"version":3,"sources":["style/Global.ts","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","Home","lazy","Characters","Info","Swap","About","getLibrary","provider","Web3","App","Component","pageProps","Global","fallback","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeProviderWrapper","props","light","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qhBAuBeA,EAdKC,YAAH,2LAKO,qBAAGC,MAAkBC,OAAOC,c,mCCP9CC,EAAOC,gBAAK,kBAAM,iCAClBC,EAAaD,gBAAK,kBAAM,iCACxBE,EAAOF,gBAAK,kBAAM,iCAClBG,EAAOH,gBAAK,kBAAM,uDAClBI,EAAQJ,gBAAK,kBAAM,iCAGzB,SAASK,EAAWC,GAClB,OAAO,IAAIC,IAAKD,GAIlB,SAASE,EAAT,GAAuC,EAAxBC,UAAwB,EAAbC,UACxB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAACC,EAAD,IACA,eAAC,WAAD,CAAUC,SAAU,wBAApB,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAACf,EAAD,MAEF,cAAC,IAAD,CAAOc,KAAK,SAASC,OAAK,EAA1B,SACE,cAACb,EAAD,MAEF,cAAC,IAAD,CAAOY,KAAK,QAAQC,OAAK,EAAzB,SACE,cAACZ,EAAD,MAEF,cAAC,IAAD,CAAOW,KAAK,QAAQC,OAAK,EAAzB,SACE,cAACX,EAAD,MAEF,cAAC,IAAD,CAAOU,KAAK,SAASC,OAAK,EAA1B,SACE,cAACV,EAAD,YAQK,iBACb,OACE,cAAC,IAAD,CAAmBC,WAAYA,EAA/B,SACE,cAAC,EAAD,OCrCSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,EAAuB,SAACC,GAE5B,OAAO,cAAC,IAAD,aAAe7B,MAAO8B,KAAWD,KAI1CE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACA,cAAC,IAAD,UACE,cAAC,EAAD,UAIJC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.6a6d6640.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@yuki_kurosawa/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { lazy, Suspense } from 'react'\r\nimport './App.css';\r\nimport { ResetCSS } from '@yuki_kurosawa/uikit'\r\nimport { HashRouter,Route } from 'react-router-dom';\r\nimport GlobalStyle from './style/Global.ts';\r\nimport Web3 from 'web3';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nconst Home = lazy(() => import('./views/Home/index.tsx'));\r\nconst Characters = lazy(() => import('./views/Characters/index.tsx'));\r\nconst Info = lazy(() => import('./views/Info/index.tsx'));\r\nconst Swap = lazy(() => import('./views/Swap/index.tsx'));\r\nconst About = lazy(() => import('./views/About/index.tsx'));\r\n\r\n\r\nfunction getLibrary(provider) {\r\n  return new Web3(provider)\r\n}\r\n\r\n\r\nfunction App({ Component, pageProps }) {\r\n  return (\r\n    <HashRouter>\r\n      <ResetCSS></ResetCSS>\r\n      <GlobalStyle></GlobalStyle>\r\n      <Suspense fallback={<div></div>}>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/chara\" exact>\r\n          <Characters />\r\n        </Route>\r\n        <Route path=\"/info\" exact>\r\n          <Info />\r\n        </Route>\r\n        <Route path=\"/swap\" exact>\r\n          <Swap />\r\n        </Route>\r\n        <Route path=\"/about\" exact>\r\n          <About />\r\n        </Route>\r\n      </Suspense>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  )\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { ModalProvider,light } from '@yuki_kurosawa/uikit'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst ThemeProviderWrapper = (props) => {\r\n  //const [isDark] = 0;\r\n  return <ThemeProvider theme={light} {...props} />\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProviderWrapper>\r\n    <ModalProvider>\r\n      <App />\r\n    </ModalProvider>\r\n    </ThemeProviderWrapper>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}